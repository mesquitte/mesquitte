[package]
name = "mesquitte-core"
version = "0.1.0"
description = "MQTT v3.1.1/v5.0 library."
authors.workspace = true
license.workspace = true
keywords = ["mqtt", "quic", "network", "async"]
categories = ["network-programming", "asynchronous"]
repository = "https://github.com/mesquitte/mesquitte"
edition.workspace = true
rust-version.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = ["mqtt", "mqtts", "ws", "wss", "quic"]

mqtt = []
mqtts = ["rustls"]
ws = ["async-tungstenite", "futures", "tungstenite"]
wss = ["async-tungstenite", "futures", "tungstenite", "rustls"]
quic = ["s2n-quic"]
rustls = [
    "async-tungstenite?/tokio-rustls-webpki-roots",
    "rustls/aws-lc-rs",
    "rustls-pemfile",
    "tokio-rustls/aws-lc-rs",
]

[dependencies]
ahash.workspace = true
async-tungstenite = { workspace = true, optional = true, features = [
    "tokio-runtime",
] }
byteorder.workspace = true
dashmap.workspace = true
flume = { workspace = true, features = ["async"] }
futures = { workspace = true, optional = true }
futures-sink.workspace = true
futures-util.workspace = true
hashbrown.workspace = true
log.workspace = true
mqtt-codec-kit = { workspace = true, features = ["v4", "v5", "tokio-codec"] }
nanoid.workspace = true
openraft = { workspace = true, features = ["serde", "type-alias"] }
parking_lot.workspace = true
pin-project-lite.workspace = true
rand.workspace = true
rust-rocksdb = { workspace = true, features = [
    "io-uring",
    "zstd",
    "zstd-static-linking-only",
] }
rustls = { workspace = true, default-features = false, optional = true }
rustls-pemfile = { workspace = true, optional = true }
s2n-quic = { workspace = true, optional = true }
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true
thiserror.workspace = true
tokio = { workspace = true, features = [
    "macros",
    "rt-multi-thread",
    "io-util",
] }
tokio-rustls = { workspace = true, default-features = false, optional = true }
tokio-util = { workspace = true, features = ["codec"] }
tonic.workspace = true
tungstenite = { workspace = true, optional = true }

[build-dependencies]
tonic-build.workspace = true

[dev-dependencies]
env_logger.workspace = true
tokio = { workspace = true, features = ["macros", "rt-multi-thread"] }
