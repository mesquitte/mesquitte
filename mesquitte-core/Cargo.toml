[package]
name = "mesquitte-core"
version = "0.1.0"
description = "MQTT v3.1.1/v5.0 library."
authors.workspace = true
license.workspace = true
keywords = ["mqtt", "quic", "network", "async"]
categories = ["network-programming", "asynchronous"]
repository = "https://github.com/mesquitte/mesquitte"
edition.workspace = true
rust-version.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[[example]]
name = "quic"
path = "examples/quic.rs"
required-features = ["quic"]

[[example]]
name = "tcp"
path = "examples/tcp.rs"
required-features = ["mqtt"]

[[example]]
name = "ws"
path = "examples/ws.rs"
required-features = ["ws"]

[[test]]
name = "raft"
path = "tests/raft_test.rs"
required-features = ["cluster", "heed-storage"]

[features]
default = ["v4", "mqtt", "ws", "quic", "log"]

v4 = ["mqtt-codec-kit/v4"]
v5 = ["mqtt-codec-kit/v5"]
mqtt = []
mqtts = ["rustls"]
ws = ["async-tungstenite", "futures", "tungstenite"]
wss = ["async-tungstenite", "futures", "tungstenite", "rustls"]
quic = ["s2n-quic"]
rustls = [
    "async-tungstenite?/tokio-rustls-webpki-roots",
    "rustls/aws-lc-rs",
    "rustls-pemfile",
    "tokio-rustls/aws-lc-rs",
]
cluster = ["axum", "backon", "bincode", "mobc", "openraft", "tarpc"]
rocksdb-storage = ["rust-rocksdb"]
heed-storage = ["heed", "tokio/fs"]
log = ["dep:log"]

[dependencies]
async-tungstenite = { workspace = true, optional = true, features = [
    "tokio-runtime",
] }
axum = { workspace = true, features = [
    "http1",
    "json",
    "tokio",
], optional = true }
backon = { workspace = true, features = ["tokio-sleep"], optional = true }
bincode = { workspace = true, optional = true }
byteorder.workspace = true
dashmap.workspace = true
flume = { workspace = true, features = ["async"] }
foldhash.workspace = true
futures = { workspace = true, optional = true }
futures-sink.workspace = true
futures-util.workspace = true
heed = { workspace = true, features = [
    "serde",
    "serde-bincode",
    "read-txn-no-tls",
    "posix-sem",
], optional = true }
log = { workspace = true, optional = true }
mqtt-codec-kit = { workspace = true, features = [
    "tokio-codec",
], optional = true }
mobc = { workspace = true, optional = true }
nanoid.workspace = true
parking_lot.workspace = true
pin-project-lite.workspace = true
openraft = { workspace = true, features = [
    "serde",
    "type-alias",
], optional = true }
rand.workspace = true
rust-rocksdb = { workspace = true, features = [
    "io-uring",
    "zstd",
    "zstd-static-linking-only",
], optional = true }
rustls = { workspace = true, default-features = false, optional = true }
rustls-pemfile = { workspace = true, optional = true }
s2n-quic = { workspace = true, optional = true }
serde = { workspace = true, features = ["derive"] }
tarpc = { workspace = true, features = [
    "tokio1",
    "serde-transport",
    "serde-transport-bincode",
    "tcp",
], optional = true }
thiserror.workspace = true
tokio = { workspace = true, features = [
    "macros",
    "rt-multi-thread",
    "io-util",
    "time",
] }
tokio-rustls = { workspace = true, default-features = false, optional = true }
tokio-util = { workspace = true, features = ["codec"] }
tungstenite = { workspace = true, optional = true }

[build-dependencies]

[dev-dependencies]
env_logger.workspace = true
maplit.workspace = true
tokio = { workspace = true, features = ["macros", "rt-multi-thread"] }
tempfile.workspace = true
